<?php
// vim: set ts=2 sw=2 sts=2 et:
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * @author     Qualiteam Software info@qtmsoft.com
 * @category   Cdev
 * @package    Cdev_XPaymentsConnector
 * @copyright  (c) 2010-2016 Qualiteam software Ltd <info@x-cart.com>. All rights reserved
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>
<?php
/**
 * @see Cdev_XPaymentsConnector_Block_Customer_Cardadd
 */
?>
<?php
$xpayUrl =  $this->getXpayUrl();
?>

<div class="page-title">
    <h1><?php echo Mage::helper('xpaymentsconnector')->__('Add new credit card to list (X-Payments)') ?></h1>
</div>

    <?php
    $result  = $this->getAuthorizeIframeUrl();
    ?>
    <div id="new-card-block">
        <?php if($result['success']):?>
            <div id="xpayment-iframe-block">
                <div class="iframe-block">
                    <?php if (!empty($this->getDefaultAddressHtml())): ?>
                        <iframe id="xp-iframe" class="xp-iframe" data-src="<?php echo $result['iframe_url'];?>"
                                src="<?php echo $result['iframe_url'];?>" name="xp-iframe">
                        </iframe>
                    <?php endif; ?>
                </div>
                <div id="default-billing-addres">
                    <li class="item">
                        <h3><?php echo $this->__('Default Billing Address') ?></h3>
                        <address>
                            <?php echo $this->getDefaultAddressHtml() ?>
                        </address>
                        <p><a href="<?php echo $this->getAddressEditUrl() ?>"><?php echo $this->__('Change Billing Address') ?></a></p>
                    </li>
                </div>
                <button onclick="cardAuthorizeSubmit();" id="create-card-button" class="button" title="Add new card" type="button"><span><span>Create card</span></span></button>
                <span style="display:none;" id="card-add-please-wait" class="please-wait">
                <img class="v-middle" title="<?php echo $this->__("Submit card information...");?>" alt="<?php echo $this->__("Submit card information...");?>"
                     src="<?php echo $this->getSkinUrl('images/opc-ajax-loader.gif') ?>">&nbsp;<?php echo $this->__("Submit card information...");?>
                </span>
            </div>
            <?php elseif(isset($result['error_message'])): ?>
                <?php echo $result['error_message'] ?>
        <?php endif;?>
    </div>




<div class="buttons-set">
    <p class="back-link"><a href="<?php echo $this->escapeUrl($this->getBackUrl()) ?>"><small>&laquo; </small><?php echo $this->__('Back') ?></a></p>
</div>

<script type="text/javascript">
    /*process iframe session expired*/
    var redirectUrl = '<?php echo $this->getUrl('xpaymentsconnector/customer/usercards');?>';
    var eventUrlPath = '<?php echo $xpayUrl; ?>';
    Event.observe(window, 'message', function (event) {
        var eventUrl = event.origin;
        if (eventUrl == eventUrlPath) {
            var jsonEventData = JSON.parse(event.data);

            if (jsonEventData.params.height) {
                $('xp-iframe').setStyle({'height': jsonEventData.params.height +'px'});
            }

            if (jsonEventData.message = "paymentFormSubmitError") {
                if (jsonEventData.params.type != undefined && jsonEventData.params.type == "2") {
                    Foobar = function () {
                        this.callBack = function () {
                            window.location.replace(redirectUrl);
                        };
                    }
                    Foobar.prototype = {
                        Init: function () {
                            var self = this;
                            var errorMessage = jsonEventData.params.error + " (X-Payments)";
                            console.log(jsonEventData);
                            alert(errorMessage);
                            self.callBack.call();

                        }
                    };
                    var foobar = new Foobar();
                    foobar.Init();
                }
                if (jsonEventData.params.type != undefined && jsonEventData.params.type == "4") {
                    var errorMessage = jsonEventData.params.error + " (X-Payments)";
                    alert(errorMessage);
                }
            }
        }
    });


    function cardAuthorizeSubmit() {

        var message = {
            message: 'submitPaymentForm',
            params: {}
        };
        $("create-card-button").hide();
        $("card-add-please-wait").show()
        var messageJson = JSON.stringify(message);
        var xpcShown = $('xp-iframe');
        xpcShown.contentWindow.postMessage(messageJson, '*');
        window.addEventListener("message", receiveMessage, false);


    }

    function receiveMessage(event)
    {
        $("create-card-button").show();
        $("card-add-please-wait").hide()
    }
</script>
